security.user.name=nfaas
security.user.password: password
security.sessions: if-required
security.oauth2.client.clientId: acme1
security.oauth2.client.clientSecret: acmesecret
security.oauth2.client.authorized-grant-types: authorization_code,refresh_token,password
security.oauth2.client.scope: openid
security.oauth2.client.accessTokenValiditySeconds: 30
server.compression.enabled=true

bootrest.enableRPG=false
nifi.securedCluster=false
logging.level.org.springframework.security: INFO

bootrest.templateFileLoadFrom=FILE
bootrest.undeployOnly=true



# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "faas"
spring.datasource.url = jdbc:mysql://localhost:3306/faas?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = passw0rd

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect























































 

#server.port=8084
#bootrest.customproperty=hello
#nifi.component.status.wait.sec=10
#bootrest.templateName=HORTONWORKS-uber-510
#nifi.hostnameAndPort=cluster-aia-nifi1:9091
#nifi.hostnameAndPort=localhost:8080
#nifi.trasnsportMode=http
#bootrest.templateFileLocation=file:///C:\\Users\\h187380\\Downloads\\template1.xml
#bootrest.templateFileURI=https://cwiki.apache.org/confluence/download/attachments/57904847/Hello_NiFi_Web_Service.xml?version=1&modificationDate=1449369797000&api=v2
#bootrest.templateFileLoadFrom=FILE
 
#bootrest.deleteQueueContent=true


#bootrest.nifiUsername=H228348
#bootrest.nifiPassword=35h6GSvsFVyPSbSap

#bootrest.deleteQueueContent=true
#bootrest.undeployOnly=true

#zuul.routes.oauth.path=/oauth/**
#zuul.routes.oauth.url=http://localhost:8080/oauth/

# Disable Hystrix timeout globally (for all services)
#hystrix.command.default.execution.timeout.enabled: false

#server.port=8084
#bootrest.customproperty=hello
#nifi.component.status.wait.sec=10
#bootrest.templateName=Hello NiFi Web Service
#bootrest.templateFileLocation=classpath:Hello_NiFi_Web_Service.xml
#bootrest.templateFileURI=
#bootrest.templateFileLoadFrom=FILE

#zuul.Servlet30WrapperFilter.pre.disable=true
